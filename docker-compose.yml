version: "3"

services:

# ============ HAProxy ============
  haproxy1:
    build: ./docker/haproxy
    container_name: ct_haproxy1
    hostname: ha1
    image: ct_haproxy1_image
    links:
      - nginx1
      - nginx2
    ports:
      # Traffic
      - "80:80"
      # Stats
      - "8181:8181"
    restart: on-failure:5
    volumes:
      - ./docker/haproxy/config:/usr/local/etc/haproxy
      - /usr/local/etc/haproxy/errors/
    networks:
      - default
      - sql_net

  haproxy2:
    build: ./docker/haproxy
    container_name: ct_haproxy2
    hostname: ha2
    image: ct_haproxy2_image
    links:
      - nginx1
      - nginx2
    ports:
      # Traffic
      - "82:80"
      # Stats
      - "8282:8181"
    restart: on-failure:5
    volumes:
      - ./docker/haproxy/config:/usr/local/etc/haproxy
      - /usr/local/etc/haproxy/errors/
    networks:
      - default
      - sql_net

# ============ MySQL ============
  mysql1:
    build: ./docker/mysql
    container_name: ct_mysql1
    environment:
      - MYSQL_ROOT_PASSWORD=1234
    image: ct_mysql_image1
    ports:
      # In case there's also MySQL isntalled locally
      - "3409:3306"
    networks:
      - default
      - sql_net

  mysql2:
    build: ./docker/mysql
    container_name: ct_mysql2
    environment:
      - MYSQL_ROOT_PASSWORD=1234
    image: ct_mysql_image2
    ports:
      # In case there's also MySQL isntalled locally
      - "3410:3306"
    networks:
      - default
      - sql_net

# ============ Nginx ============
  nginx_base:
    build: ./docker/nginx_base
    container_name: ct_nginx_base
    image: ct_nginx_base_image

  nginx1:
    build: ./docker/nginx1
    container_name: ct_nginx1
    image: ct_nginx1_image
    links:
      - nginx_base
      - node1
    restart: on-failure:5

  nginx2:
    build: ./docker/nginx2
    container_name: ct_nginx2
    image: ct_nginx2_image
    links:
      - nginx_base
      - node2
    restart: on-failure:5

# ============ Node ============
  node1:
    build: ./docker/node
    container_name: ct_node1
    image: ct_node1_image
    links: 
      - mysql1
      - mysql2
    networks:
      default:
      sql_net:
        aliases:
         - node1
    volumes:
      - ./src:/usr/src/app

  node2:
    build: ./docker/node
    container_name: ct_node2
    image: ct_node2_image
    links:
      - mysql1
      - mysql2
    networks:
      default:
      sql_net:
        aliases:
         - node2
    volumes:
      - ./src:/usr/src/app

# ============ Redis ============
  redis1:
    build: ./docker/redis
    container_name: ct_redis1
    image: ct_redis1_image
    ports:
      - "6479:6379"
    restart: on-failure:5

  redis2:
    build: ./docker/redis
    container_name: ct_redis2
    image: ct_redis2_image
    ports:
      - "6480:6379"
    restart: on-failure:5

networks:
  sql_net:
